package safronova;public class DeliveryCostCalculator{        public static double calculateDeliveryCost (double distance, String size, boolean isFragile, String workload) {                double baseCost = 0;                // Расчет стоимости в зависимости от расстояния        if (distance > 30) {            baseCost += 300;        } else if (distance > 10) {            baseCost += 200;        } else if (distance > 2) {            baseCost += 100;        } else {            baseCost += 50;        }                // Проверка на хрупкость и расстояние        if (isFragile && distance > 30) {            throw new IllegalArgumentException("Хрупкие грузы нельзя возить на расстояние более 30 км");        }                // Расчет стоимости в зависимости от габаритов        if (size.equals("большие")) {            baseCost += 200;        } else if (size.equals("маленькие")) {            baseCost += 100;        }                // Добавление стоимости за хрупкость        if (isFragile) {            baseCost += 300;        }                // Применение коэффициента загруженности        double workloadCoefficient = 1.0;        switch (workload) {            case "очень высокая":                workloadCoefficient = 1.6;                break;            case "высокая":                workloadCoefficient = 1.4;                break;            case "повышенная":                workloadCoefficient = 1.2;                break;            default:                workloadCoefficient = 1.0;        }                double totalCost = baseCost * workloadCoefficient;                // Проверка на минимальную стоимость доставки        if (totalCost < 400) {            totalCost = 400;        }                return totalCost;            }}