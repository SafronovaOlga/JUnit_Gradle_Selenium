package ui.tests;import base.BaseTest;import org.junit.jupiter.api.AfterEach;import org.junit.jupiter.api.Assertions;import org.junit.jupiter.api.BeforeEach;import org.junit.jupiter.api.Test;import org.openqa.selenium.By;import org.openqa.selenium.ElementNotInteractableException;import org.openqa.selenium.WebDriver;import org.openqa.selenium.WebElement;import org.openqa.selenium.chrome.ChromeDriver;import pages.HomePage;import pages.WebFormPage;import static org.assertj.core.api.AssertionsForClassTypes.assertThat;import static org.junit.jupiter.api.Assertions.*;public class WebFormTests extends BaseTest{        WebDriver driver;    private static final String BASE_URL = "https://bonigarcia.dev/selenium-webdriver-java/";    private static final String TEXT_TO_ENTER = "text";    private static final String TEXT_AREA_TO_ENTER = "This is line one.\nThis is line two.\nAnd this is line three.";    private WebFormPage webFormPage;    private HomePage homePage;        @BeforeEach    void setUp () {        driver = new ChromeDriver();        driver.get(BASE_URL);        driver.manage().window().maximize();    }    //    void navigateToWebFormPage() {////        webFormPage = homePage.clickWebFormLink();//    }    @AfterEach    void tearDown () {        driver.getPageSource();        driver.quit();    }        @Test    void openWebFormPageTest () {                WebElement webFormLink =  driver.findElement( By.linkText("Web form"));        webFormLink.click();        String webFormUrl = "web-form.html";               // driver.findElement( By.linkText("Web form")).click();       //        driver.findElement(By.xpath(//               "//h5[text()='Chapter 3. WebDriver Fundamentals']/../a[contains(@href,'web-form')]"))//                .click();        String currentUrl = driver.getCurrentUrl( );        WebElement title = driver.findElement(By.className("display-6"));                assertEquals(BASE_URL + webFormUrl, currentUrl);        assertEquals("Web form", title.getText());    }        @Test    void getTextAreaInputTest () {              //  String webFormUrl = "web-form.html";        driver.findElement( By.linkText("Web form")).click();       // String currentUrl =driver.getCurrentUrl( );                WebElement textArea = driver.findElement(By.name("my-textarea"));        textArea.sendKeys("Test\nTest2");                driver.findElement(By.xpath("//button[text()='Submit']"))                .click();        WebElement titleH1 = driver.findElement(By.xpath("//h1[text()='Form submitted']"));        assertEquals( "Form submitted", titleH1.getText());                    }        @Test    void getDisabledInputTest () {                driver.findElement( By.linkText("Web form")).click();                WebElement textDisabled = driver.findElement(By.name("my-disabled"));        assertEquals("", textDisabled.getText());                Exception thrown = assertThrows( ElementNotInteractableException.class,                () -> textDisabled.sendKeys("Test\n"));                assertThat(thrown.getMessage().contains("element not interactable"));                    }        @Test    void inputFieldsTest() {        webFormPage.enterTextInputField(TEXT_TO_ENTER);        webFormPage.enterPasswordInputField(TEXT_TO_ENTER);        Assertions.assertEquals(TEXT_TO_ENTER, webFormPage.getTextEntered(), "Text entered is wrong");        Assertions.assertEquals(TEXT_TO_ENTER, webFormPage.getPasswordEntered(), "Text entered is wrong");                webFormPage.clearTextInputField();        webFormPage.clearPasswordInputField();        Assertions.assertTrue(webFormPage.getTextEntered().isEmpty(), "Field is NOT blank");        Assertions.assertTrue(webFormPage.getPasswordEntered().isEmpty(), "Field is NOT blank");    }        @Test    void textAreaTest() {        webFormPage.enterTextAreaInputField(TEXT_AREA_TO_ENTER);        Assertions.assertEquals(TEXT_AREA_TO_ENTER, webFormPage.getTextAreaEntered(), "Text entered is wrong");                webFormPage.clearTextAreaField();        Assertions.assertTrue(webFormPage.getTextAreaEntered().isEmpty(), "Field is NOT blank");    }    //    @Test//    void findTextInputFormTest( ){//        WebElement formTextUnder=driver.findElement( By.xpath( "//label[@class='form-label w-100' and normalize-space(text())='Text input']" ) );//        WebElement TextForm=driver.findElement( By.id( "my-text-id" ) );//        TextForm.sendKeys( "Test it" );//        String expectedValue=TextForm.getDomProperty( "value" );////        assertEquals( "Text input",formTextUnder.getText( ),"Значения должны совпадать" );//        assertEquals( "Test it",expectedValue,"Значения должны совпадать" );//    }//}